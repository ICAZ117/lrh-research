rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperUser() {
      return isSignedIn() && request.auth.uid == "rRcvNxC7lgaTgqkXd6UWqyJ2KuQ2";
    }

    function isResearchStaff() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == "staff";
    }

    function isCreatingOrUpdatingSelfProperly(userId) {
      return request.auth.uid == userId &&
             (!("userType" in request.resource.data) ||
              request.resource.data.userType == "user");
    }

    // Rules for the users collection
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isResearchStaff() || isSuperUser());
      allow delete: if isSignedIn() && request.auth.uid == userId;
      allow write: if isSignedIn() && (
        isSuperUser() ||
        isResearchStaff() ||
        isCreatingOrUpdatingSelfProperly(userId)
      );

      // Recursive rule to allow access to subcollections under each user document
      match /{subcollection=**}/{subdoc} {
        allow read, write: if isSuperUser() || isResearchStaff();
      }
    }

    // Global rule for all top-level collections and documents
    match /{collection}/{document} {
      allow read: if true;
      allow write: if isResearchStaff() || isSuperUser();

      // Recursive rule to allow access to any subcollection anywhere
      match /{subcollection=**}/{subdoc} {
        allow read, write: if isSuperUser() || isResearchStaff();
      }
    }
  }
}
